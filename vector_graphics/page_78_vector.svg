70
Chapter 2.
Finite Automata and Regular Languages
q = r1
rn+1
r j = rℓ
read x
read y
read z
We deﬁne x = s1s2 . . . sj−1, y = sj . . . sℓ−1, and z = sℓ. . . sn. Since j < ℓ,
we have y ̸= ϵ, proving the ﬁrst claim in the theorem. Since ℓ≤p + 1, we
have |xy| = ℓ−1 ≤p, proving the second claim in the theorem. To see that
the third claim also holds, recall that the string s = xyz is accepted by M.
While reading x, M moves from the start state q to state rj. While reading
y, it moves from state rj to state rℓ= rj, i.e., after having read y, M is again
in state rj. While reading z, M moves from state rj to the accept state rn+1.
Therefore, the substring y can be repeated any number i ≥0 of times, and
the corresponding string xyiz will still be accepted by M. It follows that
xyiz ∈A for all i ≥0.
2.9.1
Applications of the pumping lemma
First example
Consider the language
A = {0n1n : n ≥0}.
We will prove by contradiction that A is not a regular language.
Assume that A is a regular language. Let p ≥1 be the pumping length,
as given by the pumping lemma. Consider the string s = 0p1p. It is clear
that s ∈A and |s| = 2p ≥p. Hence, by the pumping lemma, s can be
written as s = xyz, where y ̸= ϵ, |xy| ≤p, and xyiz ∈A for all i ≥0.
Observe that, since |xy| ≤p, the string y contains only 0s. Moreover,
since y ̸= ϵ, y contains at least one 0. But now we are in trouble: None of
the strings xy0z = xz, xy2z = xyyz, xy3z = xyyyz, . . . , is contained in A.
However, by the pumping lemma, all these strings must be in A. Hence, we
have a contradiction and we conclude that A is not a regular language.
